{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  }\n};\nexport const examService = {\n  getAllExams: async params => {\n    const response = await api.get('/exams', {\n      params\n    });\n    return response.data;\n  },\n  getExamById: async id => {\n    const response = await api.get(`/exams/${id}`);\n    return response.data;\n  },\n  pauseExam: async id => {\n    const response = await api.patch(`/exams/${id}/pause`);\n    return response.data;\n  },\n  unpauseExam: async id => {\n    const response = await api.post(`/exams/${id}/unpause`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authService","login","credentials","post","data","logout","getCurrentUser","userStr","JSON","parse","examService","getAllExams","params","get","getExamById","id","pauseExam","patch","unpauseExam"],"sources":["/Users/faek-ayoubi/Desktop/Projects/prep_doctor/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoginCredentials, LoginResponse, Exam, ApiResponse } from '../types';\n\nconst API_BASE_URL = 'http://localhost:3000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  },\n);\n\nexport const authService = {\n  login: async (credentials: LoginCredentials): Promise<LoginResponse> => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  },\n};\n\nexport const examService = {\n  getAllExams: async (params?: {\n    search?: string;\n    skip?: number;\n    take?: number;\n  }): Promise<ApiResponse<Exam[]>> => {\n    const response = await api.get('/exams', { params });\n    return response.data;\n  },\n\n  getExamById: async (id: number): Promise<Exam> => {\n    const response = await api.get(`/exams/${id}`);\n    return response.data;\n  },\n\n  pauseExam: async (id: number): Promise<Exam> => {\n    const response = await api.patch(`/exams/${id}/pause`);\n    return response.data;\n  },\n\n  unpauseExam: async (id: number): Promise<Exam> => {\n    const response = await api.post(`/exams/${id}/unpause`);\n    return response.data;\n  },\n};\n\nexport default api;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCN,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;IACvCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMS,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,WAA6B,IAA6B;IACtE,MAAMZ,QAAQ,GAAG,MAAMZ,GAAG,CAACyB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;IAC3D,OAAOZ,QAAQ,CAACc,IAAI;EACtB,CAAC;EAEDC,MAAM,EAAEA,CAAA,KAAM;IACZlB,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC;IACvCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDY,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAGpB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,OAAOmB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,GAAG,IAAI;EAC7C;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAOC,MAInB,IAAmC;IAClC,MAAMtB,QAAQ,GAAG,MAAMZ,GAAG,CAACmC,GAAG,CAAC,QAAQ,EAAE;MAAED;IAAO,CAAC,CAAC;IACpD,OAAOtB,QAAQ,CAACc,IAAI;EACtB,CAAC;EAEDU,WAAW,EAAE,MAAOC,EAAU,IAAoB;IAChD,MAAMzB,QAAQ,GAAG,MAAMZ,GAAG,CAACmC,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;IAC9C,OAAOzB,QAAQ,CAACc,IAAI;EACtB,CAAC;EAEDY,SAAS,EAAE,MAAOD,EAAU,IAAoB;IAC9C,MAAMzB,QAAQ,GAAG,MAAMZ,GAAG,CAACuC,KAAK,CAAC,UAAUF,EAAE,QAAQ,CAAC;IACtD,OAAOzB,QAAQ,CAACc,IAAI;EACtB,CAAC;EAEDc,WAAW,EAAE,MAAOH,EAAU,IAAoB;IAChD,MAAMzB,QAAQ,GAAG,MAAMZ,GAAG,CAACyB,IAAI,CAAC,UAAUY,EAAE,UAAU,CAAC;IACvD,OAAOzB,QAAQ,CAACc,IAAI;EACtB;AACF,CAAC;AAED,eAAe1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}