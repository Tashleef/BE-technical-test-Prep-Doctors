{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  }\n};\nexport const examService = {\n  getAllExams: async params => {\n    try {\n      const token = localStorage.getItem(\"access_token\");\n      console.log('Getting exams with token:', {\n        hasToken: !!token,\n        tokenLength: token === null || token === void 0 ? void 0 : token.length,\n        tokenStart: (token === null || token === void 0 ? void 0 : token.substring(0, 20)) + '...',\n        tokenEnd: token === null || token === void 0 ? void 0 : token.substring(token.length - 20)\n      });\n\n      // Ensure search parameter is always sent (backend validation requires it)\n      const queryParams = {\n        search: (params === null || params === void 0 ? void 0 : params.search) || \"\",\n        // Send empty string if no search\n        ...((params === null || params === void 0 ? void 0 : params.skip) && {\n          skip: params.skip\n        }),\n        ...((params === null || params === void 0 ? void 0 : params.take) && {\n          take: params.take\n        })\n      };\n      const queryString = new URLSearchParams(queryParams).toString();\n      const url = `${API_BASE_URL}/exams?${queryString}`;\n      console.log('Making request to:', url);\n      console.log('With headers:', {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      });\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log('Response status:', response.status);\n      console.log('Response headers:', Object.fromEntries(response.headers.entries()));\n      if (!response.ok) {\n        var _errorData$error;\n        const errorData = await response.json().catch(() => ({}));\n        console.error('Get exams error:', errorData);\n        throw new Error(`HTTP error! status: ${response.status}, message: ${((_errorData$error = errorData.error) === null || _errorData$error === void 0 ? void 0 : _errorData$error.message) || 'Unknown error'}`);\n      }\n      const data = await response.json();\n      console.log('Exams response:', data);\n      return data;\n    } catch (error) {\n      console.error(\"Get exams error:\", error);\n      throw error;\n    }\n  },\n  getExamById: async id => {\n    const response = await api.get(`/exams/${id}`);\n    return response.data;\n  },\n  pauseExam: async id => {\n    const response = await api.patch(`/exams/${id}/pause`);\n    return response.data;\n  },\n  unpauseExam: async id => {\n    const response = await api.post(`/exams/${id}/unpause`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authService","login","credentials","post","data","logout","getCurrentUser","userStr","JSON","parse","examService","getAllExams","params","console","log","hasToken","tokenLength","length","tokenStart","substring","tokenEnd","queryParams","search","skip","take","queryString","URLSearchParams","toString","url","fetch","method","Object","fromEntries","entries","ok","_errorData$error","errorData","json","catch","Error","message","getExamById","id","get","pauseExam","patch","unpauseExam"],"sources":["/Users/faek-ayoubi/Desktop/Projects/prep_doctor/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoginCredentials, LoginResponse, Exam, ApiResponse } from '../types';\n\nconst API_BASE_URL = 'http://localhost:3000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  },\n);\n\nexport const authService = {\n  login: async (credentials: LoginCredentials): Promise<LoginResponse> => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  },\n};\n\nexport const examService = {\n\tgetAllExams: async (params?: { search?: string; skip?: number; take?: number }): Promise<ApiResponse<Exam[]>> => {\n\t\ttry {\n\t\t\tconst token = localStorage.getItem(\"access_token\");\n\t\t\tconsole.log('Getting exams with token:', {\n\t\t\t\thasToken: !!token,\n\t\t\t\ttokenLength: token?.length,\n\t\t\t\ttokenStart: token?.substring(0, 20) + '...',\n\t\t\t\ttokenEnd: token?.substring(token.length - 20)\n\t\t\t});\n\t\t\t\n\t\t\t// Ensure search parameter is always sent (backend validation requires it)\n\t\t\tconst queryParams = {\n\t\t\t\tsearch: params?.search || \"\",  // Send empty string if no search\n\t\t\t\t...(params?.skip && { skip: params.skip }),\n\t\t\t\t...(params?.take && { take: params.take })\n\t\t\t};\n\t\t\t\n\t\t\tconst queryString = new URLSearchParams(queryParams).toString();\n\t\t\tconst url = `${API_BASE_URL}/exams?${queryString}`;\n\t\t\t\n\t\t\tconsole.log('Making request to:', url);\n\t\t\tconsole.log('With headers:', {\n\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t});\n\t\t\t\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconsole.log('Response status:', response.status);\n\t\t\tconsole.log('Response headers:', Object.fromEntries(response.headers.entries()));\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorData = await response.json().catch(() => ({}));\n\t\t\t\tconsole.error('Get exams error:', errorData);\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}, message: ${errorData.error?.message || 'Unknown error'}`);\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\t\t\tconsole.log('Exams response:', data);\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Get exams error:\", error);\n\t\t\tthrow error;\n\t\t}\n\t},\n\n  getExamById: async (id: number): Promise<Exam> => {\n    const response = await api.get(`/exams/${id}`);\n    return response.data;\n  },\n\n  pauseExam: async (id: number): Promise<Exam> => {\n    const response = await api.patch(`/exams/${id}/pause`);\n    return response.data;\n  },\n\n  unpauseExam: async (id: number): Promise<Exam> => {\n    const response = await api.post(`/exams/${id}/unpause`);\n    return response.data;\n  },\n};\n\nexport default api;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}