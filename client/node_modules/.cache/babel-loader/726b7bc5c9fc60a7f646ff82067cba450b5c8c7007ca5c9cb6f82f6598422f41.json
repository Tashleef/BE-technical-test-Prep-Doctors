{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3000\";\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async credentials => {\n    const response = await api.post(\"/auth/login\", credentials);\n    // Backend returns { data: { user, accessToken } }, extract and transform\n    const {\n      user,\n      accessToken\n    } = response.data.data;\n    return {\n      access_token: accessToken,\n      // Convert accessToken → access_token\n      user: user\n    };\n  },\n  logout: () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"user\");\n  },\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem(\"user\");\n    return userStr ? JSON.parse(userStr) : null;\n  }\n};\nexport const examService = {\n  getAllExams: async params => {\n    const response = await api.get(\"/exams\", {\n      params\n    });\n    return response.data;\n  },\n  getExamById: async id => {\n    const response = await api.get(`/exams/${id}`);\n    return response.data;\n  },\n  pauseExam: async id => {\n    const response = await api.patch(`/exams/${id}/pause`);\n    return response.data;\n  },\n  unpauseExam: async id => {\n    const response = await api.post(`/exams/${id}/unpause`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authService","login","credentials","post","user","accessToken","data","access_token","logout","getCurrentUser","userStr","JSON","parse","examService","getAllExams","params","get","getExamById","id","pauseExam","patch","unpauseExam"],"sources":["/Users/faek-ayoubi/Desktop/Projects/prep_doctor/client/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\nimport { LoginCredentials, LoginResponse, Exam, ApiResponse } from \"../types\";\n\nconst API_BASE_URL = \"http://localhost:3000\";\n\n// Create axios instance\nconst api = axios.create({\n\tbaseURL: API_BASE_URL,\n\theaders: {\n\t\t\"Content-Type\": \"application/json\",\n\t},\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use((config) => {\n\tconst token = localStorage.getItem(\"access_token\");\n\tif (token) {\n\t\tconfig.headers.Authorization = `Bearer ${token}`;\n\t}\n\treturn config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n\t(response) => response,\n\t(error) => {\n\t\tif (error.response?.status === 401) {\n\t\t\tlocalStorage.removeItem(\"access_token\");\n\t\t\tlocalStorage.removeItem(\"user\");\n\t\t\twindow.location.href = \"/login\";\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport const authService = {\n\tlogin: async (credentials: LoginCredentials): Promise<LoginResponse> => {\n\t\tconst response = await api.post(\"/auth/login\", credentials);\n\t\t// Backend returns { data: { user, accessToken } }, extract and transform\n\t\tconst { user, accessToken } = response.data.data;\n\t\treturn {\n\t\t\taccess_token: accessToken, // Convert accessToken → access_token\n\t\t\tuser: user,\n\t\t};\n\t},\n\n\tlogout: () => {\n\t\tlocalStorage.removeItem(\"access_token\");\n\t\tlocalStorage.removeItem(\"user\");\n\t},\n\n\tgetCurrentUser: () => {\n\t\tconst userStr = localStorage.getItem(\"user\");\n\t\treturn userStr ? JSON.parse(userStr) : null;\n\t},\n};\n\nexport const examService = {\n\tgetAllExams: async (params?: { search?: string; skip?: number; take?: number }): Promise<ApiResponse<Exam[]>> => {\n\t\tconst response = await api.get(\"/exams\", { params });\n\t\treturn response.data;\n\t},\n\n\tgetExamById: async (id: number): Promise<Exam> => {\n\t\tconst response = await api.get(`/exams/${id}`);\n\t\treturn response.data;\n\t},\n\n\tpauseExam: async (id: number): Promise<Exam> => {\n\t\tconst response = await api.patch(`/exams/${id}/pause`);\n\t\treturn response.data;\n\t},\n\n\tunpauseExam: async (id: number): Promise<Exam> => {\n\t\tconst response = await api.post(`/exams/${id}/unpause`);\n\t\treturn response.data;\n\t},\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}