{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3000';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Content-Type, Authorization, Accept\"\n  },\n  // Disable preflight for simple requests\n  withCredentials: false\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$response3;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method\n  });\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      console.log('Login response:', response.data);\n\n      // Backend returns { data: { user, accessToken } }, extract and transform\n      const {\n        user,\n        accessToken\n      } = response.data.data;\n\n      // Store the token and user\n      localStorage.setItem('access_token', accessToken);\n      localStorage.setItem('user', JSON.stringify(user));\n      return {\n        access_token: accessToken,\n        // Convert accessToken → access_token\n        user: user\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  }\n};\nexport const examService = {\n  getAllExams: async params => {\n    const response = await api.get('/exams', {\n      params\n    });\n    return response.data;\n  },\n  getExamById: async id => {\n    const response = await api.get(`/exams/${id}`);\n    return response.data;\n  },\n  pauseExam: async id => {\n    const response = await api.patch(`/exams/${id}/pause`);\n    return response.data;\n  },\n  unpauseExam: async id => {\n    const response = await api.post(`/exams/${id}/unpause`);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","_error$response2","_error$config","_error$config2","_error$response3","console","status","data","message","url","method","removeItem","window","location","href","Promise","reject","authService","login","credentials","post","log","user","accessToken","setItem","JSON","stringify","access_token","logout","getCurrentUser","userStr","parse","examService","getAllExams","params","get","getExamById","id","pauseExam","patch","unpauseExam"],"sources":["/Users/faek-ayoubi/Desktop/Projects/prep_doctor/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoginCredentials, LoginResponse, Exam, ApiResponse } from '../types';\n\nconst API_BASE_URL = 'http://localhost:3000';\n\n// Create axios instance\nconst api = axios.create({\n\tbaseURL: API_BASE_URL,\n\theaders: {\n\t\t\"Content-Type\": \"application/json\",\n\t\t\"Accept\": \"application/json\",\n\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, PATCH, OPTIONS\",\n\t\t\"Access-Control-Allow-Headers\": \"Content-Type, Authorization, Accept\",\n\t},\n\t// Disable preflight for simple requests\n\twithCredentials: false,\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n   (response) => response,\n   (error) => {\n     console.error('API Error:', {\n       status: error.response?.status,\n       data: error.response?.data,\n       message: error.message,\n       url: error.config?.url,\n       method: error.config?.method\n     });\n     \n     if (error.response?.status === 401) {\n       localStorage.removeItem('access_token');\n       localStorage.removeItem('user');\n       window.location.href = '/login';\n     }\n     return Promise.reject(error);\n   },\n );\n\nexport const authService = {\n  login: async (credentials: LoginCredentials): Promise<LoginResponse> => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      console.log('Login response:', response.data);\n      \n      // Backend returns { data: { user, accessToken } }, extract and transform\n      const { user, accessToken } = response.data.data;\n      \n      // Store the token and user\n      localStorage.setItem('access_token', accessToken);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      return {\n        access_token: accessToken, // Convert accessToken → access_token\n        user: user\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser: () => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  },\n};\n\nexport const examService = {\n  getAllExams: async (params?: {\n    search?: string;\n    skip?: number;\n    take?: number;\n  }): Promise<ApiResponse<Exam[]>> => {\n    const response = await api.get('/exams', { params });\n    return response.data;\n  },\n\n  getExamById: async (id: number): Promise<Exam> => {\n    const response = await api.get(`/exams/${id}`);\n    return response.data;\n  },\n\n  pauseExam: async (id: number): Promise<Exam> => {\n    const response = await api.patch(`/exams/${id}/pause`);\n    return response.data;\n  },\n\n  unpauseExam: async (id: number): Promise<Exam> => {\n    const response = await api.post(`/exams/${id}/unpause`);\n    return response.data;\n  },\n};\n\nexport default api;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACxBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACR,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE,kBAAkB;IAC5B,6BAA6B,EAAE,GAAG;IAClC,8BAA8B,EAAE,wCAAwC;IACxE,8BAA8B,EAAE;EACjC,CAAC;EACD;EACAC,eAAe,EAAE;AAClB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACK,YAAY,CAACQ,QAAQ,CAACN,GAAG,CACzBM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,gBAAA;EACTC,OAAO,CAACN,KAAK,CAAC,YAAY,EAAE;IAC1BO,MAAM,GAAAN,eAAA,GAAED,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBM,MAAM;IAC9BC,IAAI,GAAAN,gBAAA,GAAEF,KAAK,CAACD,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBM,IAAI;IAC1BC,OAAO,EAAET,KAAK,CAACS,OAAO;IACtBC,GAAG,GAAAP,aAAA,GAAEH,KAAK,CAACN,MAAM,cAAAS,aAAA,uBAAZA,aAAA,CAAcO,GAAG;IACtBC,MAAM,GAAAP,cAAA,GAAEJ,KAAK,CAACN,MAAM,cAAAU,cAAA,uBAAZA,cAAA,CAAcO;EACxB,CAAC,CAAC;EAEF,IAAI,EAAAN,gBAAA,GAAAL,KAAK,CAACD,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClCX,YAAY,CAACgB,UAAU,CAAC,cAAc,CAAC;IACvChB,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACjB,KAAK,CAAC;AAC9B,CACF,CAAC;AAEF,OAAO,MAAMkB,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,WAA6B,IAA6B;IACtE,IAAI;MACF,MAAMrB,QAAQ,GAAG,MAAMb,GAAG,CAACmC,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;MAC3Dd,OAAO,CAACgB,GAAG,CAAC,iBAAiB,EAAEvB,QAAQ,CAACS,IAAI,CAAC;;MAE7C;MACA,MAAM;QAAEe,IAAI;QAAEC;MAAY,CAAC,GAAGzB,QAAQ,CAACS,IAAI,CAACA,IAAI;;MAEhD;MACAZ,YAAY,CAAC6B,OAAO,CAAC,cAAc,EAAED,WAAW,CAAC;MACjD5B,YAAY,CAAC6B,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MAElD,OAAO;QACLK,YAAY,EAAEJ,WAAW;QAAE;QAC3BD,IAAI,EAAEA;MACR,CAAC;IACH,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACdM,OAAO,CAACN,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;EAED6B,MAAM,EAAEA,CAAA,KAAM;IACZjC,YAAY,CAACgB,UAAU,CAAC,cAAc,CAAC;IACvChB,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDkB,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAGnC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,OAAOkC,OAAO,GAAGL,IAAI,CAACM,KAAK,CAACD,OAAO,CAAC,GAAG,IAAI;EAC7C;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAOC,MAInB,IAAmC;IAClC,MAAMpC,QAAQ,GAAG,MAAMb,GAAG,CAACkD,GAAG,CAAC,QAAQ,EAAE;MAAED;IAAO,CAAC,CAAC;IACpD,OAAOpC,QAAQ,CAACS,IAAI;EACtB,CAAC;EAED6B,WAAW,EAAE,MAAOC,EAAU,IAAoB;IAChD,MAAMvC,QAAQ,GAAG,MAAMb,GAAG,CAACkD,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;IAC9C,OAAOvC,QAAQ,CAACS,IAAI;EACtB,CAAC;EAED+B,SAAS,EAAE,MAAOD,EAAU,IAAoB;IAC9C,MAAMvC,QAAQ,GAAG,MAAMb,GAAG,CAACsD,KAAK,CAAC,UAAUF,EAAE,QAAQ,CAAC;IACtD,OAAOvC,QAAQ,CAACS,IAAI;EACtB,CAAC;EAEDiC,WAAW,EAAE,MAAOH,EAAU,IAAoB;IAChD,MAAMvC,QAAQ,GAAG,MAAMb,GAAG,CAACmC,IAAI,CAAC,UAAUiB,EAAE,UAAU,CAAC;IACvD,OAAOvC,QAAQ,CAACS,IAAI;EACtB;AACF,CAAC;AAED,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}