{"ast":null,"code":"import{io}from'socket.io-client';class SocketService{constructor(){this.socket=null;this.examUpdateCallbacks=[];}connect(){this.socket=io('http://localhost:3000');this.socket.on('connect',()=>{console.log('Connected to WebSocket server');});this.socket.on('disconnect',()=>{console.log('Disconnected from WebSocket server');});// Listen for exam updates\nthis.socket.on('EventUpdated',exam=>{console.log('Exam updated:',exam);this.examUpdateCallbacks.forEach(callback=>callback(exam));});// Listen for specific exam updates (using pattern matching)\nthis.socket.onAny((eventName,exam)=>{if(eventName.startsWith('EventUpdated-')){console.log('Specific exam updated:',exam);this.examUpdateCallbacks.forEach(callback=>callback(exam));}});}disconnect(){if(this.socket){this.socket.disconnect();this.socket=null;}}onExamUpdate(callback){this.examUpdateCallbacks.push(callback);}offExamUpdate(callback){const index=this.examUpdateCallbacks.indexOf(callback);if(index>-1){this.examUpdateCallbacks.splice(index,1);}}joinExamRoom(examId){if(this.socket){this.socket.emit('joinExam',{examId});}}leaveExamRoom(examId){if(this.socket){this.socket.emit('leaveExam',{examId});}}}export const socketService=new SocketService();export default socketService;","map":{"version":3,"names":["io","SocketService","constructor","socket","examUpdateCallbacks","connect","on","console","log","exam","forEach","callback","onAny","eventName","startsWith","disconnect","onExamUpdate","push","offExamUpdate","index","indexOf","splice","joinExamRoom","examId","emit","leaveExamRoom","socketService"],"sources":["/Users/faek-ayoubi/Desktop/Projects/prep_doctor/client/src/services/socket.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\nimport { Exam } from '../types';\n\nclass SocketService {\n  private socket: Socket | null = null;\n  private examUpdateCallbacks: ((exam: Exam) => void)[] = [];\n\n  connect() {\n    this.socket = io('http://localhost:3000');\n\n    this.socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n    });\n\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n    });\n\n    // Listen for exam updates\n    this.socket.on('EventUpdated', (exam: Exam) => {\n      console.log('Exam updated:', exam);\n      this.examUpdateCallbacks.forEach((callback) => callback(exam));\n    });\n\n    // Listen for specific exam updates (using pattern matching)\n    this.socket.onAny((eventName: string, exam: Exam) => {\n      if (eventName.startsWith('EventUpdated-')) {\n        console.log('Specific exam updated:', exam);\n        this.examUpdateCallbacks.forEach((callback) => callback(exam));\n      }\n    });\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  onExamUpdate(callback: (exam: Exam) => void) {\n    this.examUpdateCallbacks.push(callback);\n  }\n\n  offExamUpdate(callback: (exam: Exam) => void) {\n    const index = this.examUpdateCallbacks.indexOf(callback);\n    if (index > -1) {\n      this.examUpdateCallbacks.splice(index, 1);\n    }\n  }\n\n  joinExamRoom(examId: number) {\n    if (this.socket) {\n      this.socket.emit('joinExam', { examId });\n    }\n  }\n\n  leaveExamRoom(examId: number) {\n    if (this.socket) {\n      this.socket.emit('leaveExam', { examId });\n    }\n  }\n}\n\nexport const socketService = new SocketService();\nexport default socketService;\n"],"mappings":"AAAA,OAASA,EAAE,KAAgB,kBAAkB,CAG7C,KAAM,CAAAC,aAAc,CAAAC,YAAA,OACVC,MAAM,CAAkB,IAAI,MAC5BC,mBAAmB,CAA6B,EAAE,EAE1DC,OAAOA,CAAA,CAAG,CACR,IAAI,CAACF,MAAM,CAAGH,EAAE,CAAC,uBAAuB,CAAC,CAEzC,IAAI,CAACG,MAAM,CAACG,EAAE,CAAC,SAAS,CAAE,IAAM,CAC9BC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC9C,CAAC,CAAC,CAEF,IAAI,CAACL,MAAM,CAACG,EAAE,CAAC,YAAY,CAAE,IAAM,CACjCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CAAC,CAAC,CAEF;AACA,IAAI,CAACL,MAAM,CAACG,EAAE,CAAC,cAAc,CAAGG,IAAU,EAAK,CAC7CF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEC,IAAI,CAAC,CAClC,IAAI,CAACL,mBAAmB,CAACM,OAAO,CAAEC,QAAQ,EAAKA,QAAQ,CAACF,IAAI,CAAC,CAAC,CAChE,CAAC,CAAC,CAEF;AACA,IAAI,CAACN,MAAM,CAACS,KAAK,CAAC,CAACC,SAAiB,CAAEJ,IAAU,GAAK,CACnD,GAAII,SAAS,CAACC,UAAU,CAAC,eAAe,CAAC,CAAE,CACzCP,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEC,IAAI,CAAC,CAC3C,IAAI,CAACL,mBAAmB,CAACM,OAAO,CAAEC,QAAQ,EAAKA,QAAQ,CAACF,IAAI,CAAC,CAAC,CAChE,CACF,CAAC,CAAC,CACJ,CAEAM,UAAUA,CAAA,CAAG,CACX,GAAI,IAAI,CAACZ,MAAM,CAAE,CACf,IAAI,CAACA,MAAM,CAACY,UAAU,CAAC,CAAC,CACxB,IAAI,CAACZ,MAAM,CAAG,IAAI,CACpB,CACF,CAEAa,YAAYA,CAACL,QAA8B,CAAE,CAC3C,IAAI,CAACP,mBAAmB,CAACa,IAAI,CAACN,QAAQ,CAAC,CACzC,CAEAO,aAAaA,CAACP,QAA8B,CAAE,CAC5C,KAAM,CAAAQ,KAAK,CAAG,IAAI,CAACf,mBAAmB,CAACgB,OAAO,CAACT,QAAQ,CAAC,CACxD,GAAIQ,KAAK,CAAG,CAAC,CAAC,CAAE,CACd,IAAI,CAACf,mBAAmB,CAACiB,MAAM,CAACF,KAAK,CAAE,CAAC,CAAC,CAC3C,CACF,CAEAG,YAAYA,CAACC,MAAc,CAAE,CAC3B,GAAI,IAAI,CAACpB,MAAM,CAAE,CACf,IAAI,CAACA,MAAM,CAACqB,IAAI,CAAC,UAAU,CAAE,CAAED,MAAO,CAAC,CAAC,CAC1C,CACF,CAEAE,aAAaA,CAACF,MAAc,CAAE,CAC5B,GAAI,IAAI,CAACpB,MAAM,CAAE,CACf,IAAI,CAACA,MAAM,CAACqB,IAAI,CAAC,WAAW,CAAE,CAAED,MAAO,CAAC,CAAC,CAC3C,CACF,CACF,CAEA,MAAO,MAAM,CAAAG,aAAa,CAAG,GAAI,CAAAzB,aAAa,CAAC,CAAC,CAChD,cAAe,CAAAyB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}